<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" 
   "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<section id="pa.functions"><title>Functions</title>

<variablelist>

<varlistentry>
	<term><varname>handle_subscription(domain)</varname></term>
	<listitem>
		<para>This function processes SUBSCRIBE requests to "presence" and
		"presence.winfo" (see <link
		linkend="pa.param.watcherinfo_notify">watcherinfo_notify parameter</link>) events.
		</para>
		<para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
			<listitem>
			<para><emphasis>domain</emphasis> - This can be either "registrar" or "jabber".
			</para>
			</listitem>
		</itemizedlist>
		<example>
			<title><function>handle_subscription</function> usage</title>
			<programlisting>
...
handle_subscription("registrar");
...
			</programlisting>
		</example>
	</listitem>
</varlistentry>

<varlistentry>
	<term><varname>target_online(domain)</varname></term>
	<listitem><para>This function returns 1 if the target (using get_to_uid on
	current message) is online, -1 otherwise.
	</para>
	</listitem>
</varlistentry>

<varlistentry>
	<term><varname>store_winfo(domain)</varname></term>
	<listitem><para>This function stores data about currently created
	subscription into database for later dumping in the form of watcherinfo
	notification. It should be called after handle_subscription
	during processing SUBSCRIBE request.
	</para>
	</listitem>
</varlistentry>

<varlistentry>
	<term><varname>dump_stored_winfo(domain, event_package)</varname></term>
	<listitem><para>This function tries to send stored watcherinfo data in
	in the context of existing watcherinfo subscription. It uses get_to_uid as 
	target for notification. If there is no watcherinfo subscription to such
	presentity, no information is sent.</para>
	<para>If the client responds with 2xx on generated NOTIFY request, the
	stored information is removed from database.
	</para>
	</listitem>
</varlistentry>

</variablelist>

<example><title><function>target_online</function>,
<function>store_winfo</function>, <function>dump_stored_winfo</function> usage</title>
<programlisting>
...
if (method=="SUBSCRIBE") {
	if (!t_newtran()) {
		sl_reply_error();
		break;
	};
	
	if (handle_subscription("registrar")) {; # uses uid from AVP (get_to_uid)
		if (@msg.event=~"presence\.winfo") {
			log(1, "subscription to watcherinfo\n");
			dump_stored_winfo("registrar", "presence");
			log(1, "OFFLINE AUTH: watcherinfo dumped\n");
		}
		else {
			if (@msg.event=~"presence") {
				log(1, "subscription to presence\n");
				# if offline user and new subscription (empty to tag)
				if (!target_online("registrar") &amp;&amp; (@to.tag=="")) {
					log(1, "OFFLINE AUTH: storing for offline user\n");
					store_winfo("registrar");
				}
			}
		}
	}
	break;
};
...
</programlisting>
</example>

</section>
