#
# configuration for auth_gsm module testing
#
# $ID$
#

# - debug mode
debug=9          # debug level (cmd line: -dddddddddd)
fork=no
log_stderror=yes  # (cmd line: -E)

# - daemon mode
#debug=3          # debug level (cmd line: -dddddddddd)
#fork=yes          # (cmd. line: -D)
#log_stderror=no   # (cmd line: -E)


children=2
check_via=no      # (cmd. line: -v)
dns=off           # (cmd. line: -r)
rev_dns=off       # (cmd. line: -R)
port=5060

listen=10.1.1.10

# for more info: sip_router -h

# ------------------ module loading ----------------------------------

loadmodule "../sip_router/modules/print/print.so"
loadmodule "../sip_router/modules/textops/textops.so"

loadmodule "../sip_router/modules/sl/sl.so"
loadmodule "../sip_router/modules/maxfwd/maxfwd.so"
loadmodule "../sip_router/modules/tm/tm.so"
loadmodule "../sip_router/modules/registrar/registrar.so"
loadmodule "../sip_router/modules/usrloc/usrloc.so"
loadmodule "../sip_router/modules/auth/auth.so"
loadmodule "../sip_router/modules/auth_gsm/auth_gsm.so"

# ----------------- setting module-specific parameters ---------------

# -- registrar params --

modparam("registrar", "default_expires", 120)

# -- registrar params --

modparam("usrloc", "db_mode", 0)

# -- tm params --

modparam("tm", "fr_timer", 10 )
modparam("tm", "fr_inv_timer", 15 )
modparam("tm", "wt_timer", 10 )

# -- auth_gsm params --

#modparam("auth_gsm", "service_type", "23")

route{
    if ( !mf_process_maxfwd_header("10") )
    {
        sl_send_reply("483","To Many Hops");
        drop();
    };

    if (uri=~"[@:\.]alpha\.org([;:].*)*" |
            uri=~"[@:\.]10\.1\.1\.10([;:].*)*")
    {
        # for testing purposes, simply okay all REGISTERs
        if (method=="REGISTER")
        {
            if (!gsm_www_authorize("alpha.org" /* realm */ ))
            {
                break;
            };
            save("location");
            break;
        };
        # challenge INVITEs and MESSAGEs intended for my domain
        if (method=="INVITE" | method=="MESSAGE")
        {
            if (!gsm_proxy_authorize("alpha.org" /* realm */ ))
            {
                break;
            };
        };
                                                                        
        # native SIP destinations are handled using our USRLOC DB
        if(uri=~"[@:\.]alpha\.org([;:].*)*"
            && !lookup("location")) 
        {
            sl_send_reply("404", "Not found"); 
            break;
        };
        t_relay();
        break;
    };
    
    # challenge INVITEs and MESSAGEs intended for other domains
    if (method=="INVITE" | method=="MESSAGE")
    {
        if (!gsm_proxy_authorize("alpha.org" /*realm */ ))
        {
            break;
        };
    };
    # forward anything else
    t_relay();
}

